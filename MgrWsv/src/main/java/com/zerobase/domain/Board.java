package com.zerobase.domain;import ch.qos.logback.core.spi.FilterReply;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;import com.zerobase.application.dto.BoardDto;import lombok.*;import javax.persistence.*;import java.util.List;@Getter@NoArgsConstructor(access = AccessLevel.PROTECTED)@AllArgsConstructor@Builder@Entitypublic class Board extends BaseTimeEntity{    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @Column(nullable = false, length = 100)    private String title;    @Column(nullable = false)    private String category;    @Lob // 대용량 데이터    private String content;    //조회수    @Column(nullable =false)    private int views;    @ManyToOne(fetch = FetchType.LAZY)    @JoinColumn(name = "user_id")    private User user;    @OneToMany(mappedBy = "board",            fetch = FetchType.EAGER,            cascade = CascadeType.REMOVE) //게시판 삭제시 댓글도 같이 삭제.    @JsonIgnoreProperties({"board"})    @OrderBy("id desc")    private List<Reply> replyList;    public void updateBoard(String title, String content, String category) {        this.title = title;        this.content = content;        this.category = category;    }    public BoardDto toDto() {        return BoardDto.builder()                .id(id)                .title(title)                .content(content)                .category(category)                .views(views)                .user(user)                .replyList(replyList)                .build();    }}